package com.scb.axessspringboottraining.controller;

import com.scb.axessspringboottraining.entities.AdminLogin;
import com.scb.axessspringboottraining.dao.Adminlogindata;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@RestController
@RequestMapping("/api/admin/profile")
public class AdminProfileController {

    @Autowired
    private Adminlogindata adminRepository;

    // âœ… Get profile by email
    @GetMapping("/{email}")
    public ResponseEntity<AdminLogin> getProfile(@PathVariable String email) {
        Optional<AdminLogin> profile = adminRepository.findById(email);
        return profile.map(ResponseEntity::ok)
                .orElse(ResponseEntity.notFound().build());
    }

    // âœ… Update profile by email
    @PutMapping("/{email}")
    public ResponseEntity<AdminLogin> updateProfile(
            @PathVariable String email,
            @RequestBody AdminLogin updatedProfile) {

        return adminRepository.findById(email).map(existingProfile -> {
            // only editable fields
            existingProfile.setFirstname(updatedProfile.getFirstname());
            existingProfile.setLastname(updatedProfile.getLastname());
            existingProfile.setPassword(updatedProfile.getPassword());

            AdminLogin saved = adminRepository.save(existingProfile);
            return ResponseEntity.ok(saved);
        }).orElse(ResponseEntity.notFound().build());
    }
}




import React, { useEffect, useState } from "react";
import "./AdminSettingsUI.css";
import logo from "../../Assests/sclogoshiva.png";
import { Link } from "react-router-dom";

export default function AdminSettings() {
    const [profile, setProfile] = useState({
        email: "",
        firstname: "",
        lastname: "",
        password: ""
    });

    const [newPassword, setNewPassword] = useState("");

    // Fetch profile on page load
    useEffect(() => {
        fetch("http://localhost:8080/api/admin/profile/admin1@sc.com") // ðŸ‘ˆ replace with logged-in email dynamically
            .then((res) => res.json())
            .then((data) => setProfile(data))
            .catch((err) => console.error("Error fetching profile:", err));
    }, []);

    // Handle save
    const handleSubmit = (e) => {
        e.preventDefault();

        const updated = {
            ...profile,
            password: newPassword || profile.password // keep old if new not entered
        };

        fetch(`http://localhost:8080/api/admin/profile/${profile.email}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(updated)
        })
            .then((res) => res.json())
            .then((data) => {
                alert("Profile updated successfully!");
                setProfile(data);
                setNewPassword("");
            })
            .catch((err) => console.error("Error updating profile:", err));
    };

    return (
        <div className="settings-container">
            {/* Top Bar */}
            <header className="top-bar">
                <div className="top-bar-left">
                    <h2>Admin Settings â€“ Profile</h2>
                </div>
                <div className="top-bar-right">
                    <div className="profile-section">
                        <div className="profile-pic">
                            <img src="https://via.placeholder.com/40" alt="Profile" />
                        </div>
                        <span className="username">
                            {profile.firstname} {profile.lastname}
                        </span>
                        <button className="logout-btn">Logout</button>
                    </div>
                </div>
            </header>

            <div className="content-wrapper">
                {/* Sidebar */}
                <aside className="sidebar">
                    <div className="logo-section">
                        <img src={logo} alt="Standard Chartered" className="logo" />
                    </div>
                    <div className="menu-section">
                        <ul>
                            <li><Link to="/AdminDashboard" className="menu-link">Dashboard</Link></li>
                            <li><Link to="/AdminUserManagement" className="menu-link">User Management</Link></li>
                            <li><Link to="/ReportAccess" className="menu-link">Report Access</Link></li>
                            <li className="active"><Link to="/AdminSettings" className="menu-link">Settings</Link></li>
                            <li><Link to="/Adminaccount" className="menu-link">Account</Link></li>
                            <li><Link to="/Adminhelp" className="menu-link">Help</Link></li>
                        </ul>
                    </div>
                </aside>

                {/* Main Content */}
                <main className="main-content">
                    <div className="card">
                        <h2>Profile Settings</h2>
                        <form onSubmit={handleSubmit}>
                            <div>
                                <label>Email (read-only):</label>
                                <input type="text" value={profile.email} readOnly />
                            </div>
                            <div>
                                <label>First Name:</label>
                                <input
                                    type="text"
                                    value={profile.firstname}
                                    onChange={(e) =>
                                        setProfile({ ...profile, firstname: e.target.value })
                                    }
                                />
                            </div>
                            <div>
                                <label>Last Name:</label>
                                <input
                                    type="text"
                                    value={profile.lastname}
                                    onChange={(e) =>
                                        setProfile({ ...profile, lastname: e.target.value })
                                    }
                                />
                            </div>
                            <div>
                                <label>New Password:</label>
                                <input
                                    type="password"
                                    value={newPassword}
                                    onChange={(e) => setNewPassword(e.target.value)}
                                />
                            </div>
                            <button type="submit" className="btn-primary">Save Changes</button>
                        </form>
                    </div>
                </main>
            </div>
        </div>
    );
}
