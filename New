import React, { useEffect, useState } from "react";

export default function AdminSettings() {
  const storedUser = JSON.parse(localStorage.getItem("user"));

  const [formData, setFormData] = useState({
    firstname: "",
    lastname: "",
    email: storedUser?.email || "", // email from login
    password: "",
    accounttype: "Admin",
    status: "",
    recentactivity: ""
  });

  // ✅ Fetch current profile data
  useEffect(() => {
    if (!formData.email) return;

    fetch(`http://localhost:8080/api/admin/profile/${formData.email}`)
      .then((res) => {
        if (!res.ok) throw new Error("Failed to fetch profile");
        return res.json();
      })
      .then((data) => {
        setFormData({
          firstname: data.firstname,
          lastname: data.lastname,
          email: data.email,
          password: data.password || "",
          accounttype: data.accounttype,
          status: data.status,
          recentactivity: data.recentactivity
        });
      })
      .catch((err) => console.error("Error:", err));
  }, [formData.email]);

  // ✅ Handle form field changes
  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  // ✅ Submit changes to backend
  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await fetch(
        `http://localhost:8080/api/admin/profile/${formData.email}`,
        {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(formData),
        }
      );

      if (response.ok) {
        alert("Settings updated successfully!");
      } else {
        alert("Error updating settings");
      }
    } catch (error) {
      console.error("Error:", error);
      alert("Server error");
    }
  };

  return (
    <div className="settings-container">
      <h2>Admin Settings</h2>
      <form onSubmit={handleSubmit} className="settings-form">
        <label>First Name</label>
        <input
          type="text"
          name="firstname"
          value={formData.firstname}
          onChange={handleChange}
        />

        <label>Last Name</label>
        <input
          type="text"
          name="lastname"
          value={formData.lastname}
          onChange={handleChange}
        />

        <label>Email</label>
        <input type="text" name="email" value={formData.email} disabled />

        <label>Password</label>
        <input
          type="password"
          name="password"
          value={formData.password}
          onChange={handleChange}
        />

        <label>Status</label>
        <input
          type="text"
          name="status"
          value={formData.status}
          onChange={handleChange}
          disabled
        />

        <label>Recent Activity</label>
        <input
          type="text"
          name="recentactivity"
          value={formData.recentactivity || "No recent activity"}
          disabled
        />

        <button type="submit" className="save-btn">
          Save Changes
        </button>
      </form>
    </div>
  );
}
