import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import "./Adminaccount.css"; // reuse same CSS as Account page

export default function AdminSettings() {
  const storedUser = JSON.parse(localStorage.getItem("user"));
  const email = storedUser?.email;

  const [adminDetails, setAdminDetails] = useState(null);
  const [loading, setLoading] = useState(true);

  // Fetch admin profile on mount
  useEffect(() => {
    if (!email) return;

    fetch(`http://localhost:8080/api/admin/profile/${email}`)
      .then((res) => {
        if (!res.ok) throw new Error("Failed to fetch profile");
        return res.json();
      })
      .then((data) => {
        setAdminDetails(data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("Error fetching profile:", err);
        setLoading(false);
      });
  }, [email]);

  // Handle input changes for editable fields
  const handleChange = (e) => {
    setAdminDetails({ ...adminDetails, [e.target.name]: e.target.value });
  };

  // Submit updated first name / last name
  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const response = await fetch(
        `http://localhost:8080/api/admin/profile/${email}`,
        {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(adminDetails),
        }
      );

      if (response.ok) {
        alert("Settings updated successfully!");
      } else {
        alert("Error updating settings");
      }
    } catch (error) {
      console.error("Error:", error);
      alert("Server error");
    }
  };

  if (loading) return <p>Loading profile...</p>;

  return (
    <div className="settings-container">
      <h2>Admin Settings</h2>

      <form onSubmit={handleSubmit} className="settings-form">
        <div className="details-card">
          <h3>Personal Information</h3>
          <div className="detail-item">
            <label>First Name:</label>
            <input
              type="text"
              name="firstname"
              value={adminDetails.firstname}
              onChange={handleChange}
            />
          </div>
          <div className="detail-item">
            <label>Last Name:</label>
            <input
              type="text"
              name="lastname"
              value={adminDetails.lastname}
              onChange={handleChange}
            />
          </div>
          <div className="detail-item">
            <label>Email:</label>
            <span>{adminDetails.email}</span>
          </div>
        </div>

        <div className="details-card">
          <h3>Account Details</h3>
          <div className="detail-item">
            <label>Account Type:</label>
            <span>{adminDetails.accounttype}</span>
          </div>
          <div className="detail-item">
            <label>Status:</label>
            <span>{adminDetails.status}</span>
          </div>
          <div className="detail-item">
            <label>Recent Activity:</label>
            <span>{adminDetails.recentactivity || "No recent activity"}</span>
          </div>
        </div>

        <div className="action-buttons">
          <button type="submit" className="save-btn">
            Save Changes
          </button>
          <Link to="/Account" className="action-btn secondary">
            Back to Account
          </Link>
        </div>
      </form>
    </div>
  );
}
