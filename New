package com.scb.axessspringboottraining.controller;

import com.scb.axessspringboottraining.entities.AdminLogin;
import com.scb.axessspringboottraining.dao.Adminlogindata;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@CrossOrigin(origins = "http://localhost:3000") // Allow React frontend
@RestController
@RequestMapping("/api/admin/profile")
public class AdminProfileController {

    @Autowired
    private Adminlogindata adminRepository;

    // ✅ Fetch admin profile by email
    @GetMapping("/{email}")
    public ResponseEntity<AdminLogin> getProfile(@PathVariable String email) {
        Optional<AdminLogin> adminOpt = adminRepository.findById(email);

        if (adminOpt.isPresent()) {
            AdminLogin admin = adminOpt.get();
            return ResponseEntity.ok(admin); // ✅ Send JSON to frontend
        } else {
            return ResponseEntity.notFound().build();
        }
    }

    // ✅ Update admin profile
    @PutMapping("/{email}")
    public ResponseEntity<AdminLogin> updateProfile(
            @PathVariable String email,
            @RequestBody AdminLogin updatedProfile) {

        return adminRepository.findById(email)
                .map(existingProfile -> {
                    existingProfile.setFirstname(updatedProfile.getFirstname());
                    existingProfile.setLastname(updatedProfile.getLastname());
                    existingProfile.setPassword(updatedProfile.getPassword());
                    existingProfile.setAccounttype(updatedProfile.getAccounttype());
                    existingProfile.setStatus(updatedProfile.getStatus());
                    existingProfile.setRecentactivity(updatedProfile.getRecentactivity());
                    return ResponseEntity.ok(adminRepository.save(existingProfile));
                })
                .orElse(ResponseEntity.notFound().build());
    }
}
